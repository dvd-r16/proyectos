# Usa una imagen base de Python
FROM python:3.10-slim


# Establecer el directorio de trabajo
WORKDIR /app

# Instala dependencias del sistema necesarias, incluyendo libGL y otras librerías para OpenCV y face_recognition
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libgl1 \
    libglib2.0-0 \
    build-essential \
    cmake \
    libgtk2.0-dev \
    libboost-all-dev \
    libssl-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copia el archivo de requerimientos
COPY requirements.txt requirements.txt

# Actualiza pip e instala las dependencias del proyecto
RUN pip install --upgrade pip
RUN pip install -r requirements.txt
RUN pip install opencv-python-headless dlib face_recognition imutils scikit-learn

# Copia todo el contenido del proyecto al contenedor
COPY . .

# Crear los archivos estáticos de Django
RUN python manage.py collectstatic --noinput
# Copia los archivos estáticos
# COPY ./staticfiles /app/static

# Exponer el puerto 8000
EXPOSE 8000

# Ejecutar el servidor utilizando Gunicorn
CMD ["gunicorn", "ProyectoFinal.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]
