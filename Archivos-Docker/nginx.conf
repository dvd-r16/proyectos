worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;  # Incluye tipos de contenido
    default_type  application/octet-stream;

    # Configuración de logging
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Configuración del servidor
    server {
        listen 80;  # Escucha en el puerto 80 para solicitudes HTTP

        # Servir archivos estáticos (CSS, JavaScript, imágenes)
        location /static/ {
            alias /app/static/;  # Ajuste para coincidir con el volumen en Docker
            autoindex on;    # Opcional, muestra una lista de archivos si no hay index.html
        }

        # Configuración para archivos de medios
        location /media/ {
            alias /app/media/;  # Asegúrate de que coincida con el volumen en Docker
            expires 30d;
            add_header Cache-Control "public, must-revalidate";
        }

        # Manejar todas las demás solicitudes con Django a través de Gunicorn
        location / {
            proxy_pass http://web:8000;  # Redirige el tráfico a Gunicorn en el contenedor `web`
            proxy_set_header Host $host;  # Pasa la cabecera del host original
            proxy_set_header X-Real-IP $remote_addr;  # IP real del cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Para balanceadores
            proxy_set_header X-Forwarded-Proto $scheme;  # Esquema (http o https)
        }
    }
}
